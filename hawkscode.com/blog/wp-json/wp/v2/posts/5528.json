{"id":5528,"date":"2020-10-17T16:10:00","date_gmt":"2020-10-17T10:40:00","guid":{"rendered":"https:\/\/hawkscode.com\/blog\/?p=5528"},"modified":"2020-10-17T16:10:56","modified_gmt":"2020-10-17T10:40:56","slug":"what-is-state-in-react-and-its-usage","status":"publish","type":"post","link":"https:\/\/hawkscode.com\/blog\/what-is-state-in-react-and-its-usage\/","title":{"rendered":"What is State in React? and Its Usage"},"content":{"rendered":"\n<figure class=\"wp-block-image size-large\"><img loading=\"lazy\" decoding=\"async\" width=\"1024\" height=\"1024\" src=\"https:\/\/hawkscode.com\/blog\/wp-content\/uploads\/2020\/09\/imgpsh_fullsize_anim-1024x1024.png\" alt=\"\" class=\"wp-image-5531\" srcset=\"https:\/\/hawkscode.com\/blog\/wp-content\/uploads\/2020\/09\/imgpsh_fullsize_anim-1024x1024.png 1024w, https:\/\/hawkscode.com\/blog\/wp-content\/uploads\/2020\/09\/imgpsh_fullsize_anim-300x300.png 300w, https:\/\/hawkscode.com\/blog\/wp-content\/uploads\/2020\/09\/imgpsh_fullsize_anim-150x150.png 150w, https:\/\/hawkscode.com\/blog\/wp-content\/uploads\/2020\/09\/imgpsh_fullsize_anim-768x768.png 768w, https:\/\/hawkscode.com\/blog\/wp-content\/uploads\/2020\/09\/imgpsh_fullsize_anim-696x696.png 696w, https:\/\/hawkscode.com\/blog\/wp-content\/uploads\/2020\/09\/imgpsh_fullsize_anim-1068x1068.png 1068w, https:\/\/hawkscode.com\/blog\/wp-content\/uploads\/2020\/09\/imgpsh_fullsize_anim-420x420.png 420w, https:\/\/hawkscode.com\/blog\/wp-content\/uploads\/2020\/09\/imgpsh_fullsize_anim.png 1080w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" \/><\/figure>\n\n\n\n<p><strong>What is State in React?<\/strong>&nbsp;<em>State<\/em>&nbsp;is a JavaScript object that stores component\u2019s dynamic data and it enables a component to keep track of changes between renders. Because state is dynamic, it is reserved only for interactivity so you don\u2019t use it for static React projects.<\/p>\n\n\n\n<p>Components defined as classes have some additional features. Local&nbsp;<em>state<\/em>&nbsp;is exactly that: a feature available only to classes. S<em>tate<\/em>&nbsp;can only be used within a class and usually the only place where you can assign&nbsp;this.state&nbsp;is the constructor.<\/p>\n\n\n\n<p><strong>class<\/strong>&nbsp;Greeting&nbsp;<strong>extends<\/strong>&nbsp;React.Component {<br><strong>constructor()&nbsp;<\/strong>{<br><strong>super()<\/strong>;<strong>this<\/strong>.state = {<br><strong>name<\/strong>: \u2018John Smith\u2019<br>}<br>}<br><strong>render<\/strong>() {<br><strong>return&lt;h1&gt;<\/strong>Hello, my name is {&nbsp;<strong>this<\/strong>.state.<strong>name<\/strong>&nbsp;}<strong>&lt;\/h1&gt;;<\/strong>}<br>}<\/p>\n\n\n\n<p><strong>class<\/strong>&nbsp;Greeting&nbsp;<strong>extends<\/strong>&nbsp;React.Component {<br>state = {<br><strong>name<\/strong>: \u2018John Smith\u2019<br>}<br>}<br><strong>render<\/strong>() {<br><strong>return<\/strong>&nbsp;<strong>&lt;h1&gt;<\/strong>Hello, my name is {&nbsp;<strong>this<\/strong>.state.<strong>name<\/strong>&nbsp;}<strong>&lt;\/h1&gt;;<\/strong>}<br>}<\/p>\n\n\n\n<h2 class=\"has-very-dark-gray-color has-text-color wp-block-heading\"><strong>State Updates May Be Asynchronous<\/strong><\/h2>\n\n\n\n<p><strong>What is State in React?&nbsp;<\/strong>React may batch multiple&nbsp;setState()&nbsp;calls into a single update for performance. Calls to&nbsp;<em>setState<\/em>&nbsp;are asynchronous when they are inside event handlers and that when you don\u2019t rely on&nbsp;this.state&nbsp;to reflect the new value immediately after calling&nbsp;<em>setState<\/em>.<\/p>\n\n\n\n<p>incrementCount() {<br>\/\/ Note: this will *not* work as intended.<br><strong>this<\/strong>.setState(<strong>{<\/strong>count: this.state.count + 1<strong>}<\/strong>);<br>}<\/p>\n\n\n\n<p>handleSomething() {<br>\/\/ Let\u2019s say `this.state.count` starts at 0.<br><strong>this<\/strong>.incrementCount();<br><strong>this<\/strong>.incrementCount();<br><strong>&nbsp;this<\/strong>.incrementCount();<br>\/\/ When React re-renders the component, `this.state.count` will be 1, but you expected 3.<\/p>\n\n\n\n<p>\/\/ This is because `incrementCount()` function above reads from `this.state.count`,<br>\/\/ but React doesn\u2019t update `this.state.count` until the component is re-rendered.<br>\/\/ So `incrementCount()` ends up reading `this.state.count` as 0 every time, and sets it to 1.<\/p>\n\n\n\n<p>To fix it, use a second form of&nbsp;<em>setState<\/em>&nbsp;that accepts a function rather than an object to ensure the call always uses the most updated version of&nbsp;<em>state<\/em>. i hope now it\u2019s clear to you&nbsp;<strong>What is State in React?<\/strong><\/p>\n\n\n\n<p>Passing an update function allows you to access the&nbsp;<em>current state value<\/em>&nbsp;inside the updater. Since&nbsp;<em>setState<\/em>&nbsp;calls are batched, this lets you chain updates and ensure they build on top of each other instead of conflicting:<\/p>\n\n\n\n<p>incrementCount() {<br><strong>this<\/strong>.setState(<strong>(state)<\/strong>&nbsp;=&gt; {<br>\/\/ Important: read `state` instead of `this.state` when updating.<br>return {count:&nbsp;<strong>state<\/strong>.count + 1}<br>});<br>}<\/p>\n\n\n\n<p>handleSomething() {<br>\/\/ Let\u2019s say `this.state.count` starts at 0.<br><strong>this<\/strong>.incrementCount();<br><strong>this<\/strong>.incrementCount();<br><strong>this<\/strong>.incrementCount();<\/p>\n\n\n\n<p>\/\/ If you read `this.state.count` now, it would still be 0.<br>\/\/ But when React re-renders the component, it will be 3.<br>}<\/p>\n\n\n\n<p>Also you can pass&nbsp;<em>props<\/em>&nbsp;as a second argument at the time the update is applied:<\/p>\n\n\n\n<p>\/\/ Correct<br><strong>this<\/strong>.setState(<strong>(state<\/strong>,&nbsp;<strong>props)<\/strong>&nbsp;=&gt; ({<br>counter:&nbsp;<strong>state<\/strong>.counter +&nbsp;<strong>props<\/strong>.increment<br>}));<\/p>\n\n\n\n<p><strong>State Updates are Merged<\/strong><\/p>\n\n\n\n<p>When you call&nbsp;setState(), React merges the object you provide into the current state.<\/p>\n\n\n\n<p>For instance, your state may contain several independent variables:<\/p>\n\n\n\n<p>constructor(<strong>props<\/strong>) {<br>super(<strong>props<\/strong>);<br><strong>this<\/strong>.state = {<br>posts: [],<br>comments: []<br>};<br>}<\/p>\n\n\n\n<p>Then you can update them independently with separate&nbsp;setState()&nbsp;calls:<\/p>\n\n\n\n<p>componentDidMount() {<br>fetchPosts().<strong>then<\/strong>(response =&gt; {<br><strong>this<\/strong>.setState(<strong>{<\/strong><br>posts: response.posts<br><strong>}<\/strong>);<br>});<\/p>\n\n\n\n<p>fetchComments().<strong>then<\/strong>(response =&gt; {<br><strong>this<\/strong>.setState(<strong>{<\/strong><br>comments: response.comments<br><strong>}<\/strong>);<br>});<br>}<\/p>\n\n\n\n<p>The merging is shallow, so&nbsp;this.setState({comments})&nbsp;leaves&nbsp;this.state.posts&nbsp;intact, but completely replaces&nbsp;this.state.comments.<\/p>\n\n\n\n<p>You might be asking what is&nbsp;ComponentDidMount()&nbsp;and how it is used. It is a method that is invoked immediately after a component is mounted (inserted into the tree). Initialization that requires DOM nodes should go here. So if you need to load data from a remote endpoint (API), this is a good place to instantiate the network request.<\/p>\n\n\n\n<p><strong>What is State in React?&nbsp;<\/strong>As you can see in the above example the properties for&nbsp;this.state&nbsp;are now independent and separately added&nbsp;this.setState&nbsp;, passed an object to each property and surrounded them by&nbsp;ComponentDidMount()&nbsp;where they will be added to the DOM tree after we get the response from the&nbsp;fetchPosts()&nbsp;and&nbsp;fetchComments().<\/p>\n\n\n\n<p class=\"has-background has-very-light-gray-background-color\">I hope you like this blog,&nbsp;<strong>What is State in React?&nbsp;<\/strong>To learn more visit&nbsp;<a rel=\"noreferrer noopener\" href=\"http:\/\/www.hawkscode.com\/\" target=\"_blank\"><strong><span class=\"has-inline-color has-vivid-green-cyan-color\">HawksCode<\/span><\/strong><\/a>&nbsp;and&nbsp;<a rel=\"noreferrer noopener\" href=\"http:\/\/www.easyshsiksha.com\/\" target=\"_blank\"><strong><span class=\"has-inline-color has-vivid-green-cyan-color\">Easyshiksha<\/span><\/strong><\/a>.<\/p>\n","protected":false},"excerpt":{"rendered":"<p>What is State in React?&nbsp;State&nbsp;is a JavaScript object that stores component\u2019s dynamic data and it enables a component to keep track of changes between renders. Because state is dynamic, it is reserved only for interactivity so you don\u2019t use it for static React projects. Components defined as classes have some additional features. Local&nbsp;state&nbsp;is exactly that: <\/p>\n","protected":false},"author":3,"featured_media":5529,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":{"footnotes":""},"categories":[70,58,56,21,55,73],"tags":[201,154,309,283,104,311],"yoast_head":"<!-- This site is optimized with the Yoast SEO plugin v19.7.1 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>What is State in React? and Its Usage - HawksCode<\/title>\n<meta name=\"description\" content=\"What is State in React? and its usage. This blog, you will understancd about State a JavaScript object that stores component\u2019s dynamic data.\" \/>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/hawkscode.com\/blog\/what-is-state-in-react-and-its-usage\/\" \/>\n<meta property=\"og:locale\" content=\"en_US\" \/>\n<meta property=\"og:type\" content=\"article\" \/>\n<meta property=\"og:title\" content=\"What is State in React? and Its Usage - HawksCode\" \/>\n<meta property=\"og:description\" content=\"What is State in React? and its usage. This blog, you will understancd about State a JavaScript object that stores component\u2019s dynamic data.\" \/>\n<meta property=\"og:url\" content=\"https:\/\/hawkscode.com\/blog\/what-is-state-in-react-and-its-usage\/\" \/>\n<meta property=\"og:site_name\" content=\"HawksCode\" \/>\n<meta property=\"article:published_time\" content=\"2020-10-17T10:40:00+00:00\" \/>\n<meta property=\"article:modified_time\" content=\"2020-10-17T10:40:56+00:00\" \/>\n<meta property=\"og:image\" content=\"https:\/\/hawkscode.com\/blog\/wp-content\/uploads\/2020\/09\/What-is-State-in-React.png\" \/>\n\t<meta property=\"og:image:width\" content=\"1366\" \/>\n\t<meta property=\"og:image:height\" content=\"768\" \/>\n\t<meta property=\"og:image:type\" content=\"image\/png\" \/>\n<meta name=\"author\" content=\"Chandni Sharma\" \/>\n<meta name=\"twitter:card\" content=\"summary\" \/>\n<meta name=\"twitter:label1\" content=\"Written by\" \/>\n\t<meta name=\"twitter:data1\" content=\"Chandni Sharma\" \/>\n\t<meta name=\"twitter:label2\" content=\"Est. reading time\" \/>\n\t<meta name=\"twitter:data2\" content=\"4 minutes\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"WebPage\",\"@id\":\"https:\/\/hawkscode.com\/blog\/what-is-state-in-react-and-its-usage\/\",\"url\":\"https:\/\/hawkscode.com\/blog\/what-is-state-in-react-and-its-usage\/\",\"name\":\"What is State in React? and Its Usage - HawksCode\",\"isPartOf\":{\"@id\":\"https:\/\/hawkscode.com\/blog\/#website\"},\"datePublished\":\"2020-10-17T10:40:00+00:00\",\"dateModified\":\"2020-10-17T10:40:56+00:00\",\"author\":{\"@id\":\"https:\/\/hawkscode.com\/blog\/#\/schema\/person\/33c98b400b7c69fc91bf61e28c5156c2\"},\"description\":\"What is State in React? and its usage. This blog, you will understancd about State a JavaScript object that stores component\u2019s dynamic data.\",\"breadcrumb\":{\"@id\":\"https:\/\/hawkscode.com\/blog\/what-is-state-in-react-and-its-usage\/#breadcrumb\"},\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/hawkscode.com\/blog\/what-is-state-in-react-and-its-usage\/\"]}]},{\"@type\":\"BreadcrumbList\",\"@id\":\"https:\/\/hawkscode.com\/blog\/what-is-state-in-react-and-its-usage\/#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Home\",\"item\":\"https:\/\/hawkscode.com\/blog\/\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"What is State in React? and Its Usage\"}]},{\"@type\":\"WebSite\",\"@id\":\"https:\/\/hawkscode.com\/blog\/#website\",\"url\":\"https:\/\/hawkscode.com\/blog\/\",\"name\":\"HawksCode\",\"description\":\"Web, Software, Mobile App, ERP Design and Development Company\",\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":{\"@type\":\"EntryPoint\",\"urlTemplate\":\"https:\/\/hawkscode.com\/blog\/?s={search_term_string}\"},\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"},{\"@type\":\"Person\",\"@id\":\"https:\/\/hawkscode.com\/blog\/#\/schema\/person\/33c98b400b7c69fc91bf61e28c5156c2\",\"name\":\"Chandni Sharma\",\"image\":{\"@type\":\"ImageObject\",\"inLanguage\":\"en-US\",\"@id\":\"https:\/\/hawkscode.com\/blog\/#\/schema\/person\/image\/\",\"url\":\"https:\/\/secure.gravatar.com\/avatar\/31cbe01225a597c98236b15edc845729?s=96&d=mm&r=g\",\"contentUrl\":\"https:\/\/secure.gravatar.com\/avatar\/31cbe01225a597c98236b15edc845729?s=96&d=mm&r=g\",\"caption\":\"Chandni Sharma\"},\"sameAs\":[\"http:\/\/www.hawkscode.com\"],\"url\":\"https:\/\/hawkscode.com\/blog\/author\/chandni-hawkscode\/\"}]}<\/script>\n<!-- \/ Yoast SEO plugin. -->","yoast_head_json":{"title":"What is State in React? and Its Usage - HawksCode","description":"What is State in React? and its usage. This blog, you will understancd about State a JavaScript object that stores component\u2019s dynamic data.","robots":{"index":"index","follow":"follow","max-snippet":"max-snippet:-1","max-image-preview":"max-image-preview:large","max-video-preview":"max-video-preview:-1"},"canonical":"https:\/\/hawkscode.com\/blog\/what-is-state-in-react-and-its-usage\/","og_locale":"en_US","og_type":"article","og_title":"What is State in React? and Its Usage - HawksCode","og_description":"What is State in React? and its usage. This blog, you will understancd about State a JavaScript object that stores component\u2019s dynamic data.","og_url":"https:\/\/hawkscode.com\/blog\/what-is-state-in-react-and-its-usage\/","og_site_name":"HawksCode","article_published_time":"2020-10-17T10:40:00+00:00","article_modified_time":"2020-10-17T10:40:56+00:00","og_image":[{"width":1366,"height":768,"url":"https:\/\/hawkscode.com\/blog\/wp-content\/uploads\/2020\/09\/What-is-State-in-React.png","type":"image\/png"}],"author":"Chandni Sharma","twitter_card":"summary","twitter_misc":{"Written by":"Chandni Sharma","Est. reading time":"4 minutes"},"schema":{"@context":"https:\/\/schema.org","@graph":[{"@type":"WebPage","@id":"https:\/\/hawkscode.com\/blog\/what-is-state-in-react-and-its-usage\/","url":"https:\/\/hawkscode.com\/blog\/what-is-state-in-react-and-its-usage\/","name":"What is State in React? and Its Usage - HawksCode","isPartOf":{"@id":"https:\/\/hawkscode.com\/blog\/#website"},"datePublished":"2020-10-17T10:40:00+00:00","dateModified":"2020-10-17T10:40:56+00:00","author":{"@id":"https:\/\/hawkscode.com\/blog\/#\/schema\/person\/33c98b400b7c69fc91bf61e28c5156c2"},"description":"What is State in React? and its usage. This blog, you will understancd about State a JavaScript object that stores component\u2019s dynamic data.","breadcrumb":{"@id":"https:\/\/hawkscode.com\/blog\/what-is-state-in-react-and-its-usage\/#breadcrumb"},"inLanguage":"en-US","potentialAction":[{"@type":"ReadAction","target":["https:\/\/hawkscode.com\/blog\/what-is-state-in-react-and-its-usage\/"]}]},{"@type":"BreadcrumbList","@id":"https:\/\/hawkscode.com\/blog\/what-is-state-in-react-and-its-usage\/#breadcrumb","itemListElement":[{"@type":"ListItem","position":1,"name":"Home","item":"https:\/\/hawkscode.com\/blog\/"},{"@type":"ListItem","position":2,"name":"What is State in React? and Its Usage"}]},{"@type":"WebSite","@id":"https:\/\/hawkscode.com\/blog\/#website","url":"https:\/\/hawkscode.com\/blog\/","name":"HawksCode","description":"Web, Software, Mobile App, ERP Design and Development Company","potentialAction":[{"@type":"SearchAction","target":{"@type":"EntryPoint","urlTemplate":"https:\/\/hawkscode.com\/blog\/?s={search_term_string}"},"query-input":"required name=search_term_string"}],"inLanguage":"en-US"},{"@type":"Person","@id":"https:\/\/hawkscode.com\/blog\/#\/schema\/person\/33c98b400b7c69fc91bf61e28c5156c2","name":"Chandni Sharma","image":{"@type":"ImageObject","inLanguage":"en-US","@id":"https:\/\/hawkscode.com\/blog\/#\/schema\/person\/image\/","url":"https:\/\/secure.gravatar.com\/avatar\/31cbe01225a597c98236b15edc845729?s=96&d=mm&r=g","contentUrl":"https:\/\/secure.gravatar.com\/avatar\/31cbe01225a597c98236b15edc845729?s=96&d=mm&r=g","caption":"Chandni Sharma"},"sameAs":["http:\/\/www.hawkscode.com"],"url":"https:\/\/hawkscode.com\/blog\/author\/chandni-hawkscode\/"}]}},"_links":{"self":[{"href":"https:\/\/hawkscode.com\/blog\/wp-json\/wp\/v2\/posts\/5528"}],"collection":[{"href":"https:\/\/hawkscode.com\/blog\/wp-json\/wp\/v2\/posts"}],"about":[{"href":"https:\/\/hawkscode.com\/blog\/wp-json\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"https:\/\/hawkscode.com\/blog\/wp-json\/wp\/v2\/users\/3"}],"replies":[{"embeddable":true,"href":"https:\/\/hawkscode.com\/blog\/wp-json\/wp\/v2\/comments?post=5528"}],"version-history":[{"count":5,"href":"https:\/\/hawkscode.com\/blog\/wp-json\/wp\/v2\/posts\/5528\/revisions"}],"predecessor-version":[{"id":5739,"href":"https:\/\/hawkscode.com\/blog\/wp-json\/wp\/v2\/posts\/5528\/revisions\/5739"}],"wp:featuredmedia":[{"embeddable":true,"href":"https:\/\/hawkscode.com\/blog\/wp-json\/wp\/v2\/media\/5529"}],"wp:attachment":[{"href":"https:\/\/hawkscode.com\/blog\/wp-json\/wp\/v2\/media?parent=5528"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https:\/\/hawkscode.com\/blog\/wp-json\/wp\/v2\/categories?post=5528"},{"taxonomy":"post_tag","embeddable":true,"href":"https:\/\/hawkscode.com\/blog\/wp-json\/wp\/v2\/tags?post=5528"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}